name: Build OTP release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The OTP version'
        required: true

jobs:
  ensure_release:
    runs-on: ubuntu-18.04
    name: "Ensure release (${{ github.event.inputs.version }})"
    steps:
      - run: gh api -XHEAD repos/erlang/otp/releases/tags/OTP-${{ github.event.inputs.version }}
        name: Check erlang/otp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: check-release
        name: Check burrito-elixir/erlang-builder 
        run: |
          if gh api -XHEAD repos/burrito-elixir/erlang-builder/releases/tags/OTP-${{ github.event.inputs.version }}; then 
            echo ::set-output name=exists::$(echo true)
          else
            echo ::set-output name=exists::$(echo false)
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          owner: burrito-elixir
          repo: erlang-builder
          commitish: main
          tag_name: OTP-${{ github.event.inputs.version }}
          prerelease: ${{ contains(github.event.inputs.version, 'rc') }}
        if: ${{ steps.check-release.outputs.exists == 'false' }}

  build-musl:
    needs: [ensure_release]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04]
    steps:
    - uses: actions/checkout@v2

    - name: Set release name
      id: release-name
      run: echo ::set-output name=name::otp-${{ github.event.inputs.version }}-$(uname -sm | tr '[:upper:]' '[:lower:]' | tr ' ' '-')

    - id: asset-exists
      name: Check if release asset exists
      run: |
        release_id=$(gh api repos/burrito-elixir/erlang-builder/releases/tags/OTP-${{ github.event.inputs.version }} | jq .id)
        if gh api repos/burrito-elixir/erlang-builder/releases/${release_id}/assets | jq -r '.[].name' | grep ${{ steps.release-name.outputs.name }}_musl_libc; then
          echo ::set-output name=exists::$(echo true)
        else
          echo ::set-output name=exists::$(echo false)
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - run: |
        docker build --build-arg version="${{ github.event.inputs.version }}" . -f alpine.Dockerfile -t build-otp-alpine
        docker cp $(docker create build-otp-alpine):/tmp/beamup/beamup/${{ steps.release-name.outputs.name }}.tar.gz ./${{ steps.release-name.outputs.name }}.tar.gz
        cp ${{ steps.release-name.outputs.name }}.tar.gz ${{ steps.release-name.outputs.name }}_musl_libc.tar.gz
      if: ${{ steps.asset-exists.outputs.exists == 'false' }}

    - run: gh release upload -R burrito-elixir/erlang-builder OTP-${{ github.event.inputs.version }} ./${{ steps.release-name.outputs.name }}_musl_libc.tar.gz
      name: Upload asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ steps.asset-exists.outputs.exists == 'false' }}

  build:
    needs: [ensure_release]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]
    steps:
    - uses: actions/checkout@v2

    - name: Set release name
      id: release-name
      run: echo ::set-output name=name::otp-${{ github.event.inputs.version }}-$(uname -sm | tr '[:upper:]' '[:lower:]' | tr ' ' '-')

    - id: asset-exists
      name: Check if release asset exists
      run: |
        release_id=$(gh api repos/burrito-elixir/erlang-builder/releases/tags/OTP-${{ github.event.inputs.version }} | jq .id)
        if gh api repos/burrito-elixir/erlang-builder/releases/${release_id}/assets | jq -r '.[].name' | grep ${{ steps.release-name.outputs.name }}; then
          echo ::set-output name=exists::$(echo true)
        else
          echo ::set-output name=exists::$(echo false)
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - run: TMPDIR=$PWD/tmp ./scripts/build_otp.sh ${{ github.event.inputs.version }}
      if: ${{ steps.asset-exists.outputs.exists == 'false' }}

    - run: gh release upload -R burrito-elixir/erlang-builder OTP-${{ github.event.inputs.version }} tmp/beamup/${{ steps.release-name.outputs.name }}.tar.gz
      name: Upload asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      if: ${{ steps.asset-exists.outputs.exists == 'false' }}
